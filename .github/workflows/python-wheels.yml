name: Python-Wheels

on:
  push:
    branches: [ $default-branch, master, releases ]

permissions: write-all

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  VTK_VERSION_MAJOR: 9
  VTK_VERSION_MINOR: 2
  VTK_VERSION_PATCH: 5

jobs:
  build_wheels:
    name: Build Python wheels
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-latest, macOS-latest]
    env:
      # Skip 32-bit wheels builds
      CIBW_SKIP: "*-win32 *_i686"
      CIBW_BEFORE_ALL_LINUX: >
        echo "Considering vtk-Linux-`uname -m`.tar.gz..." &&
        mkdir -p vtk &&
        tar -xvzf vtk-Linux-`uname -m`.tar.gz -C vtk/

    steps:
      - uses: actions/checkout@v4

      # Used to host cibuildwheel
      - uses: actions/setup-python@v4

      - name: Create setup.py
        run: |
            mv wrappers/python/wheels.github/* ./
            python set_version.py
            python set_eigen_data.py
            rm set_version.py set_eigen_data.py
            
        shell: bash

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: download pre-built VTK static library (non-Linux)
        uses: suisei-cn/actions-download-file@v1.4.0
        with:
          url: https://github.com/sanguinariojoe/vtk-builds/releases/download/VTK-${{env.VTK_VERSION_MAJOR}}.${{env.VTK_VERSION_MINOR}}.${{env.VTK_VERSION_PATCH}}-static/vtk-${{runner.os}}-x86_64.tar.gz
          target: ${{github.workspace}}/
        if: runner.os != 'Linux'

      - name: download pre-built VTK static library (Linux-x86_64)
        uses: suisei-cn/actions-download-file@v1.4.0
        with:
          url: https://github.com/sanguinariojoe/vtk-builds/releases/download/VTK-${{env.VTK_VERSION_MAJOR}}.${{env.VTK_VERSION_MINOR}}.${{env.VTK_VERSION_PATCH}}-static/vtk-${{runner.os}}-x86_64.tar.gz
          target: ${{github.workspace}}/
        if: runner.os == 'Linux'

      - name: download pre-built VTK static library (Linux-aarch64)
        uses: suisei-cn/actions-download-file@v1.4.0
        with:
          url: https://github.com/sanguinariojoe/vtk-builds/releases/download/VTK-${{env.VTK_VERSION_MAJOR}}.${{env.VTK_VERSION_MINOR}}.${{env.VTK_VERSION_PATCH}}-static/vtk-${{runner.os}}-aarch64.tar.gz
          target: ${{github.workspace}}/
        if: runner.os == 'Linux'

      - name: download pre-built VTK static library (Linux-armv7)
        uses: suisei-cn/actions-download-file@v1.4.0
        with:
          url: https://github.com/sanguinariojoe/vtk-builds/releases/download/VTK-${{env.VTK_VERSION_MAJOR}}.${{env.VTK_VERSION_MINOR}}.${{env.VTK_VERSION_PATCH}}-static/vtk-${{runner.os}}-armv7.tar.gz
          target: ${{github.workspace}}/
        if: runner.os == 'Linux'

      - name: download pre-built VTK static library (Linux-ppc64le)
        uses: suisei-cn/actions-download-file@v1.4.0
        with:
          url: https://github.com/sanguinariojoe/vtk-builds/releases/download/VTK-${{env.VTK_VERSION_MAJOR}}.${{env.VTK_VERSION_MINOR}}.${{env.VTK_VERSION_PATCH}}-static/vtk-${{runner.os}}-ppc64le.tar.gz
          target: ${{github.workspace}}/
        if: runner.os == 'Linux'

      - name: download pre-built VTK static library (Linux-s390x)
        uses: suisei-cn/actions-download-file@v1.4.0
        with:
          url: https://github.com/sanguinariojoe/vtk-builds/releases/download/VTK-${{env.VTK_VERSION_MAJOR}}.${{env.VTK_VERSION_MINOR}}.${{env.VTK_VERSION_PATCH}}-static/vtk-${{runner.os}}-s390x.tar.gz
          target: ${{github.workspace}}/
        if: runner.os == 'Linux'

      - name: Create folders
        run: |
            mkdir -p ${{github.workspace}}/vtk
        if: runner.os != 'Linux'

      - name: Extract VTK tgz
        run: |
            tar -xvzf vtk-${{runner.os}}-x86_64.tar.gz -C vtk/
        if: runner.os != 'Linux'

      - name: Build the source distribution
        run: python setup.py sdist
        if: runner.os == 'Linux'

      - name: Build wheels
        run: python -m cibuildwheel --output-dir dist

      - uses: actions/upload-artifact@v3
        with:
          name: "Python wheels"
          path: ./dist/*.whl

      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.MOORDYN_TESTPYPI_API }}
          repository-url: https://test.pypi.org/project/moordyn/
          skip-existing: true

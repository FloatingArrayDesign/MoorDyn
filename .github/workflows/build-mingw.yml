name: CMake

on:
  push:
    branches: [ $default-branch, master, dev ]
  pull_request:
    branches:
      - "**"

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  CC: "gcc"
  CXX: "g++"

jobs:
  build_mingw:
    runs-on: ${{ matrix.os }}
    strategy:
        matrix:
            os: [windows-latest]

    steps:
    - uses: actions/checkout@v4

    - name: Create folders
      run: |
          mkdir -p ${{github.workspace}}/install
          mkdir -p ${{github.workspace}}/build

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DEXTERNAL_EIGEN:BOOL=OFF -DPYTHON_WRAPPER:BOOL=OFF -DFORTRAN_WRAPPER:BOOL=ON -DRUST_WRAPPER:BOOL=OFF -DUSE_VTK=OFF -DBUILD_TESTING=ON

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    # We do a little hack here. We install the library so we perfectly know the
    # path. Then we set the environment variable to let the OS find the
    # libraries

    - name: Install
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target INSTALL

    - name: List DLLs
      run: ls install/bin
      shell: bash

    - name: Set $PATH
      run: Add-Content $env:GITHUB_PATH "${{github.workspace}}\install\bin"

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}
